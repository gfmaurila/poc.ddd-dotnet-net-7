services:
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14269:14269"
  
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "@C23l10a1985"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"

# docker compose up
# Server=localhost,1433;Database=InvestmentRequest;User ID=sa;Password=@C23l10a1985

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: gfmaurila
      POSTGRES_PASSWORD: C23l10a1985
      POSTGRES_DB: gfmaurila
    ports:
      - "5432:5432"

# https://cloudinfrastructureservices.co.uk/run-redis-with-docker-compose/
# https://www.datanovia.com/en/lessons/docker-compose-wait-for-container-using-wait-tool/docker-compose-wait-for-redis-container-to-be-ready/
  redis-cache:
    image: redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass C23l10a1985 --appendonly yes
    volumes: 
      - redis-cache:/data
  
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "@C23l10a1985"
      MYSQL_DATABASE: "gfmaurila"
    ports:
      - "3306:3306"

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: gfmaurila
      MONGO_INITDB_ROOT_PASSWORD: C23l10a1985
    ports:
      - "27018:27017"
  # mongodb://gfmaurila:g18u03i1986@localhost:27018/admin

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net

# http://localhost:15672
# usuário guest 
# senha guest

networks:
  rabbitmq_go_net:
    driver: bridge

volumes:
  redis-cache:
    driver: local  
